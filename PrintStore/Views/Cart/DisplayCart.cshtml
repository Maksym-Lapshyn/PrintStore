@using PrintStore.Domain.Entities
@using PrintStore.Domain.Concrete
@using PrintStore.Infrastructure.Concrete
@using Microsoft.AspNet.Identity
@model Cart

@{
    ViewBag.Title = "DisplayCart";
    Layout = "~/Views/Shared/_Layout.cshtml";
    IdentityUserLayer userLayer = new IdentityUserLayer();
    bool userIsBlocked = false;
    if (Request.IsAuthenticated)
    {
        string userId = HttpContext.Current.User.Identity.GetUserId<string>();
        userIsBlocked = userLayer.Users.Where(u => u.Id == userId).First().IsBlocked;
    }
}

<div class="panel panel-default">
    <div class="panel-heading">
        <h3>Your shopping cart</h3>
    </div>
    <div class="panel-body">
        @if (Model.CartLines.Count() != 0)
        {
            <table class="table table-condensed table-striped table-responsive">
                <tr>
                    <th style="width:10%;">Product</th>
                    <th style="width:5%;">Quantity</th>
                    <th style="width:30%;">Description</th>
                    <th style="width:25%;">Image</th>
                    <th style="width:15%;">Actions</th>
                    <th style="width:15%;">Price</th>
                </tr>

                @foreach (CartLine cartLine in Model.CartLines)
                {
                    <tr>
                        <td>@cartLine.Product.Name</td>
                        <td>@cartLine.Quantity</td>
                        <td>@cartLine.Product.Description</td>
                        <td><img src="~/Images/@cartLine.Product.SmallImagePath" width="200" height="150" /></td>
                        <td>
                            @using (Html.BeginForm("RemoveFromCart", "Cart", FormMethod.Post))
                            {
                                <input type="hidden" name="productId" value=@cartLine.Product.ProductId />
                                <input type="submit" value="Remove" class="btn btn-danger" />
                            }
                        </td>
                        <td>@(cartLine.ComputeTotalPrice())</td>
                    </tr>
                }

            </table>
        }
        else
        {
            <p>Your cart is empty!</p>
        }
    </div>
    <div class="panel-footer">
        @if (Request.IsAuthenticated && userIsBlocked == false && Model.ComputeTotalPrice() != default(decimal))
        {
            using (Html.BeginForm("CheckOut", "Cart", FormMethod.Post))
            {
                <span>Total price - $@Model.ComputeTotalPrice() &nbsp;</span>
                <input type="submit" class="btn btn-primary btn-lg" value="Check out" />
            }
        }
        else
        {
            <p>
                Total price - $@Model.ComputeTotalPrice() &nbsp;
                <button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal">Check out</button>
            </p>
            <div class="modal fade" id="myModal" role="dialog">
                <div class="modal-dialog">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Error</h4>
                    </div>
                    <div class="modal-body">
                        @if (Model.ComputeTotalPrice() == default(decimal))
                        {
                            <p>Your cart is empty!</p>
                        }
                        else if (userIsBlocked == true)
                        {
                            <p>Your account is blocked!</p>
                        }
                        else
                        {
                            <p>Only registered users can check out!</p>
                        }
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default pull-right" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
